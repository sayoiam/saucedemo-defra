name: Pull Request Validation

on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened, ready_for_review]

# Cancel previous runs for the same PR
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  # Quick validation checks
  quick-checks:
    name: Quick Validation Checks
    runs-on: ubuntu-latest
    # Removed continue-on-error: true - validation failures should fail the workflow
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          # Removed cache: 'npm' to avoid lock file issues

      - name: Install dependencies
        run: npm install  # Changed from npm ci to npm install

      - name: Check package.json and package-lock.json
        run: |
          if [ -f "package.json" ]; then
            echo "✅ Package.json exists"
          else
            echo "❌ Missing package.json"
            exit 1
          fi
          
          # Don't require package-lock.json since we're not using npm ci
          if [ -f "package-lock.json" ]; then
            echo "✅ Package-lock.json exists"
          else
            echo "⚠️ Package-lock.json not found (using npm install instead of npm ci)"
          fi

      - name: Validate TypeScript configuration
        run: |
          if [ -f "tsconfig.json" ]; then
            npx tsc --noEmit
            echo "✅ TypeScript configuration is valid"
          else
            echo "❌ Missing tsconfig.json"
            exit 1
          fi

      - name: Validate Cypress configuration
        run: |
          if [ -f "cypress.config.ts" ]; then
            node -e "require('./cypress.config.ts')"
            echo "✅ Cypress configuration is valid"
          else
            echo "❌ Missing cypress.config.ts"
            exit 1
          fi

      - name: Check for required files
        run: |
          REQUIRED_FILES=(
            "cypress/support/e2e.ts"
            "cypress/support/commands.ts"
            "cypress/support/config.ts"
            "cypress/pages/BasePage.ts"
            "cypress/pages/LoginPage.ts"
          )
          
          for file in "${REQUIRED_FILES[@]}"; do
            if [ -f "$file" ]; then
              echo "✅ $file exists"
            else
              echo "❌ Missing required file: $file"
              exit 1
            fi
          done

  # Code quality checks
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    # Removed continue-on-error: true - code quality failures should fail the workflow
    needs: quick-checks
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          # Removed cache: 'npm' to avoid lock file issues

      - name: Install dependencies
        run: npm install  # Changed from npm ci to npm install

      - name: Run TypeScript compiler
        run: npx tsc --noEmit

      - name: Check code formatting (if Prettier is configured)
        run: |
          if [ -f ".prettierrc" ] || [ -f ".prettierrc.json" ] || [ -f "prettier.config.js" ]; then
            npx prettier --check "cypress/**/*.ts"
          else
            echo "Prettier not configured, skipping format check"
          fi
        continue-on-error: true  # Keep this for optional formatting checks

      - name: Run ESLint (if configured)
        run: |
          if [ -f ".eslintrc.js" ] || [ -f ".eslintrc.json" ]; then
            npx eslint cypress/**/*.ts --format=github
          else
            echo "ESLint not configured, skipping lint check"
          fi
        continue-on-error: true  # Keep this for optional linting checks

      - name: Check for TODO/FIXME comments
        run: |
          TODO_COUNT=$(grep -r "TODO\|FIXME" cypress/ --include="*.ts" | wc -l)
          if [ $TODO_COUNT -gt 0 ]; then
            echo "⚠️ Found $TODO_COUNT TODO/FIXME comments:"
            grep -r "TODO\|FIXME" cypress/ --include="*.ts" || true
          else
            echo "✅ No TODO/FIXME comments found"
          fi

  # Test validation
  test-validation:
    name: Test Validation
    runs-on: ubuntu-latest
    # Removed continue-on-error: true - test failures should fail the workflow
    needs: code-quality
    strategy:
      matrix:
        test-type: [smoke, critical]
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          # Removed cache: 'npm' to avoid lock file issues

      - name: Install dependencies
        run: npm install  # Changed from npm ci to npm install

      - name: Run smoke tests
        if: matrix.test-type == 'smoke'
        uses: cypress-io/github-action@v6
        with:
          install: false  # Added to prevent caching issues
          browser: chrome
          spec: |
            cypress/e2e/features/login.feature
            cypress/e2e/features/complete-purchase-flow.feature
            cypress/e2e/features/inventory-management.feature
            cypress/e2e/complete-purchase-flow.cy.ts
          config: |
            {
              "env": {
                "grepTags": "@smoke"
              }
            }
        # Removed continue-on-error: true - test failures should fail the job

      - name: Run critical path tests
        if: matrix.test-type == 'critical'
        uses: cypress-io/github-action@v6
        with:
          install: false  # Added to prevent caching issues
          browser: chrome
          spec: |
            cypress/e2e/features/login.feature
            cypress/e2e/features/complete-purchase-flow.feature
            cypress/e2e/features/inventory-management.feature
            cypress/e2e/complete-purchase-flow.cy.ts
          config: |
            {
              "env": {
                "grepTags": "@critical"
              }
            }
        # Removed continue-on-error: true - test failures should fail the job

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: pr-test-artifacts-${{ matrix.test-type }}
          path: |
            cypress/screenshots
            cypress/videos
            cypress/reports
          retention-days: 7

  # Security and accessibility validation
  security-accessibility:
    name: Security & Accessibility Validation
    runs-on: ubuntu-latest
    # Removed continue-on-error: true - security/accessibility failures should fail the workflow
    needs: quick-checks
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          # Removed cache: 'npm' to avoid lock file issues

      - name: Install dependencies
        run: npm install  # Changed from npm ci to npm install

      - name: Run accessibility tests
        uses: cypress-io/github-action@v6
        with:
          install: false  # Added to prevent caching issues
          browser: chrome
          spec: cypress/e2e/features/accessibility.feature
        # Removed continue-on-error: true - test failures should fail the job

      - name: Run security tests
        uses: cypress-io/github-action@v6
        with:
          install: false  # Added to prevent caching issues
          browser: chrome
          spec: cypress/e2e/features/security.feature
        # Removed continue-on-error: true - test failures should fail the job

      - name: Upload security/accessibility artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: pr-security-accessibility-artifacts
          path: |
            cypress/screenshots
            cypress/videos
            cypress/reports
          retention-days: 7

  # Performance impact check
  performance-check:
    name: Performance Impact Check
    runs-on: ubuntu-latest
    # Removed continue-on-error: true - performance failures should fail the workflow
    needs: quick-checks
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          # Removed cache: 'npm' to avoid lock file issues

      - name: Install dependencies
        run: npm install  # Changed from npm ci to npm install

      - name: Run performance baseline
        uses: cypress-io/github-action@v6
        with:
          install: false  # Added to prevent caching issues
          browser: chrome
          spec: cypress/e2e/features/complete-purchase-flow.feature
        env:
          CYPRESS_PERFORMANCE_MONITORING: true
        # Removed continue-on-error: true - test failures should fail the job

      - name: Analyze performance impact
        run: |
          if [ -f "cypress/reports/performance-metrics.json" ]; then
            echo "Performance metrics collected for PR validation"
            cat cypress/reports/performance-metrics.json
          
            # Basic performance validation
            node -e "
              const fs = require('fs');
              if (fs.existsSync('cypress/reports/performance-metrics.json')) {
                const metrics = JSON.parse(fs.readFileSync('cypress/reports/performance-metrics.json', 'utf8'));
          
                // Define acceptable thresholds for PR validation
                const thresholds = {
                  loadTime: 8000,  // More lenient for PR validation
                  renderTime: 5000,
                  networkTime: 3000
                };
          
                let hasIssues = false;
                Object.keys(thresholds).forEach(metric => {
                  if (metrics[metric] && metrics[metric] > thresholds[metric]) {
                    console.log(\`⚠️ Performance concern: \${metric} = \${metrics[metric]}ms (threshold: \${thresholds[metric]}ms)\`);
                    hasIssues = true;
                  } else if (metrics[metric]) {
                    console.log(\`✅ \${metric} = \${metrics[metric]}ms (acceptable)\`);
                  }
                });
          
                if (hasIssues) {
                  console.log('Performance concerns detected but not failing PR validation');
                }
              }
            "

      - name: Upload performance artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: pr-performance-artifacts
          path: |
            cypress/screenshots
            cypress/videos
            cypress/reports
          retention-days: 7

  # Generate PR validation report
  generate-pr-report:
    name: Generate PR Validation Report
    runs-on: ubuntu-latest
    needs: [test-validation, security-accessibility, performance-check]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: pr-artifacts
        continue-on-error: true  # Keep this for artifact downloads

      - name: Generate PR validation summary
        run: |
          echo "# PR Validation Report" > pr-validation-summary.md
          echo "" >> pr-validation-summary.md
          echo "**PR:** #${{ github.event.pull_request.number }}" >> pr-validation-summary.md
          echo "**Title:** ${{ github.event.pull_request.title }}" >> pr-validation-summary.md
          echo "**Author:** @${{ github.event.pull_request.user.login }}" >> pr-validation-summary.md
          echo "**Date:** $(date)" >> pr-validation-summary.md
          echo "" >> pr-validation-summary.md
          
          # Add job status summary
          echo "## Job Status Summary" >> pr-validation-summary.md
          echo "- **Quick Checks**: ${{ needs.quick-checks.result }}" >> pr-validation-summary.md
          echo "- **Code Quality**: ${{ needs.code-quality.result }}" >> pr-validation-summary.md
          echo "- **Test Validation**: ${{ needs.test-validation.result }}" >> pr-validation-summary.md
          echo "- **Security & Accessibility**: ${{ needs.security-accessibility.result }}" >> pr-validation-summary.md
          echo "- **Performance Check**: ${{ needs.performance-check.result }}" >> pr-validation-summary.md
          echo "" >> pr-validation-summary.md
          
          # Check validation results
          echo "## Validation Results" >> pr-validation-summary.md
          
          # Count artifacts to determine test results
          SMOKE_ARTIFACTS=$(find pr-artifacts -name "*smoke*" 2>/dev/null | wc -l)
          CRITICAL_ARTIFACTS=$(find pr-artifacts -name "*critical*" 2>/dev/null | wc -l)
          SECURITY_ARTIFACTS=$(find pr-artifacts -name "*security*" 2>/dev/null | wc -l)
          PERFORMANCE_ARTIFACTS=$(find pr-artifacts -name "*performance*" 2>/dev/null | wc -l)
          
          if [ $SMOKE_ARTIFACTS -gt 0 ]; then
            echo "- ✅ Smoke Tests: Executed" >> pr-validation-summary.md
          else
            echo "- ❌ Smoke Tests: Not executed or failed" >> pr-validation-summary.md
          fi
          
          if [ $CRITICAL_ARTIFACTS -gt 0 ]; then
            echo "- ✅ Critical Path Tests: Executed" >> pr-validation-summary.md
          else
            echo "- ❌ Critical Path Tests: Not executed or failed" >> pr-validation-summary.md
          fi
          
          if [ $SECURITY_ARTIFACTS -gt 0 ]; then
            echo "- ✅ Security Tests: Executed" >> pr-validation-summary.md
          else
            echo "- ⚠️ Security Tests: Not executed or failed" >> pr-validation-summary.md
          fi
          
          if [ $PERFORMANCE_ARTIFACTS -gt 0 ]; then
            echo "- ✅ Performance Check: Executed" >> pr-validation-summary.md
          else
            echo "- ⚠️ Performance Check: Not executed or failed" >> pr-validation-summary.md
          fi
          
          echo "" >> pr-validation-summary.md
          echo "## Recommendations" >> pr-validation-summary.md
          echo "- Review test results and fix any failures" >> pr-validation-summary.md
          echo "- Ensure all critical functionality works as expected" >> pr-validation-summary.md
          echo "- Check for any performance regressions" >> pr-validation-summary.md
          echo "- Verify accessibility and security standards are maintained" >> pr-validation-summary.md
          echo "" >> pr-validation-summary.md
          echo "ℹ️ **Note**: Jobs now properly fail when tests fail, providing accurate validation status." >> pr-validation-summary.md
        continue-on-error: true  # Keep this for report generation only

      - name: Comment on PR with validation results
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            if (fs.existsSync('pr-validation-summary.md')) {
              const summary = fs.readFileSync('pr-validation-summary.md', 'utf8');
            
              // Check if there's already a comment from this workflow
              const comments = await github.rest.issues.listComments({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
              });
            
              const botComment = comments.data.find(comment => 
                comment.user.type === 'Bot' && 
                comment.body.includes('PR Validation Report')
              );
            
              if (botComment) {
                // Update existing comment
                await github.rest.issues.updateComment({
                  comment_id: botComment.id,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: summary
                });
              } else {
                // Create new comment
                await github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: summary
                });
              }
            }
        continue-on-error: true  # Keep this for PR comments

      - name: Upload PR validation report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: pr-validation-report
          path: pr-validation-summary.md
          retention-days: 30

