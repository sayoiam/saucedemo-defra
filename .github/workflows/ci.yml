name: SauceDemo Cypress Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      browser:
        description: 'Browser to run tests on'
        required: false
        default: 'chrome'
        type: choice
        options:
          - chrome
          - firefox
          - edge
      test_suite:
        description: 'Test suite to run'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - smoke
          - regression
          - accessibility
          - security
          - responsive

jobs:
  # Lint and type check - runs independently
  lint:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run TypeScript type check
        run: npx tsc --noEmit

      - name: Run ESLint (if configured)
        run: |
          if [ -f ".eslintrc.js" ] || [ -f ".eslintrc.json" ]; then
            npx eslint cypress/**/*.ts
          else
            echo "ESLint not configured, skipping..."
          fi

  # Smoke tests - runs independently
  smoke-tests:
    name: Smoke Tests
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch' || github.event.inputs.test_suite == 'all' || github.event.inputs.test_suite == 'smoke'
    strategy:
      matrix:
        browser: [chrome, firefox]
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run Cypress smoke tests
        uses: cypress-io/github-action@v6
        with:
          install: false
          browser: ${{ matrix.browser }}
          spec: |
            cypress/e2e/features/login.feature
            cypress/e2e/features/complete-purchase-flow.feature
            cypress/e2e/features/inventory-management.feature
            cypress/e2e/complete-purchase-flow.cy.ts
          config: |
            {
              "env": {
                "grepTags": "@smoke"
              }
            }
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

      - name: Upload smoke test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: smoke-test-artifacts-${{ matrix.browser }}
          path: |
            cypress/screenshots
            cypress/videos
            cypress/reports
          retention-days: 7

  # Regression tests - runs independently
  regression-tests:
    name: Regression Tests
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch' || github.event.inputs.test_suite == 'all' || github.event.inputs.test_suite == 'regression'
    strategy:
      matrix:
        browser: [chrome, firefox, edge]
        viewport: [desktop, tablet, mobile]
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Set viewport configuration
        run: |
          case "${{ matrix.viewport }}" in
            desktop)
              echo "CYPRESS_viewportWidth=1280" >> $GITHUB_ENV
              echo "CYPRESS_viewportHeight=720" >> $GITHUB_ENV
              ;;
            tablet)
              echo "CYPRESS_viewportWidth=768" >> $GITHUB_ENV
              echo "CYPRESS_viewportHeight=1024" >> $GITHUB_ENV
              ;;
            mobile)
              echo "CYPRESS_viewportWidth=375" >> $GITHUB_ENV
              echo "CYPRESS_viewportHeight=667" >> $GITHUB_ENV
              ;;
          esac

      - name: Run Cypress regression tests
        uses: cypress-io/github-action@v6
        with:
          install: false
          browser: ${{ matrix.browser }}
          spec: |
            cypress/e2e/features/login.feature
            cypress/e2e/features/complete-purchase-flow.feature
            cypress/e2e/features/inventory-management.feature
            cypress/e2e/features/security.feature
            cypress/e2e/complete-purchase-flow.cy.ts
          config: |
            {
              "env": {
                "grepTags": "@regression or not @skip"
              }
            }
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

      - name: Upload regression test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: regression-test-artifacts-${{ matrix.browser }}-${{ matrix.viewport }}
          path: |
            cypress/screenshots
            cypress/videos
            cypress/reports
          retention-days: 14

  # Accessibility tests - dedicated job
  accessibility-tests:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch' || github.event.inputs.test_suite == 'all' || github.event.inputs.test_suite == 'accessibility'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run accessibility tests
        uses: cypress-io/github-action@v6
        with:
          install: false
          browser: chrome
          spec: cypress/e2e/features/accessibility.feature
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

      - name: Generate accessibility report
        run: |
          if [ -f "cypress/reports/accessibility-report.json" ]; then
            echo "Accessibility report generated"
            cat cypress/reports/accessibility-report.json
          fi
        continue-on-error: true

      - name: Upload accessibility artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: accessibility-test-artifacts
          path: |
            cypress/screenshots
            cypress/videos
            cypress/reports
          retention-days: 30

  # Security tests - dedicated job
  security-tests:
    name: Security Tests
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch' || github.event.inputs.test_suite == 'all' || github.event.inputs.test_suite == 'security'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run security tests
        uses: cypress-io/github-action@v6
        with:
          install: false
          browser: chrome
          spec: cypress/e2e/features/security.feature
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

      - name: Generate security report
        run: |
          if [ -f "cypress/reports/security-report.json" ]; then
            echo "Security report generated"
            cat cypress/reports/security-report.json
          fi
        continue-on-error: true

      - name: Upload security artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-test-artifacts
          path: |
            cypress/screenshots
            cypress/videos
            cypress/reports
          retention-days: 30

  # Responsive tests - dedicated job
  responsive-tests:
    name: Responsive Tests
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch' || github.event.inputs.test_suite == 'all' || github.event.inputs.test_suite == 'responsive'
    strategy:
      matrix:
        viewport: [mobile, tablet, desktop, large-desktop]
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Set viewport for responsive testing
        run: |
          case "${{ matrix.viewport }}" in
            mobile)
              echo "CYPRESS_viewportWidth=375" >> $GITHUB_ENV
              echo "CYPRESS_viewportHeight=667" >> $GITHUB_ENV
              ;;
            tablet)
              echo "CYPRESS_viewportWidth=768" >> $GITHUB_ENV
              echo "CYPRESS_viewportHeight=1024" >> $GITHUB_ENV
              ;;
            desktop)
              echo "CYPRESS_viewportWidth=1280" >> $GITHUB_ENV
              echo "CYPRESS_viewportHeight=720" >> $GITHUB_ENV
              ;;
            large-desktop)
              echo "CYPRESS_viewportWidth=1920" >> $GITHUB_ENV
              echo "CYPRESS_viewportHeight=1080" >> $GITHUB_ENV
              ;;
          esac

      - name: Run responsive tests
        uses: cypress-io/github-action@v6
        with:
          install: false
          browser: chrome
          spec: |
            cypress/e2e/features/login.feature
            cypress/e2e/features/complete-purchase-flow.feature
            cypress/e2e/features/inventory-management.feature
            cypress/e2e/features/security.feature
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          CYPRESS_VIEWPORT: ${{ matrix.viewport }}

      - name: Upload responsive artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: responsive-test-artifacts-${{ matrix.viewport }}
          path: |
            cypress/screenshots
            cypress/videos
            cypress/reports
          retention-days: 14

  # Generate consolidated report - runs after all tests (success or failure)
  generate-report:
    name: Generate Test Report
    runs-on: ubuntu-latest
    needs: [lint, smoke-tests, regression-tests, accessibility-tests, security-tests, responsive-tests]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
        continue-on-error: true

      - name: Merge test reports
        run: |
          mkdir -p merged-reports
          find artifacts -name "*.json" -path "*/reports/*" -exec cp {} merged-reports/ \; 2>/dev/null || true
          
          # Generate consolidated HTML report
          npm run report:merge || echo "Report merge script not found"
        continue-on-error: true

      - name: Generate test summary
        run: |
          echo "# Test Execution Summary" > test-summary.md
          echo "" >> test-summary.md
          echo "**Date:** $(date)" >> test-summary.md
          echo "**Commit:** ${{ github.sha }}" >> test-summary.md
          echo "**Branch:** ${{ github.ref_name }}" >> test-summary.md
          echo "" >> test-summary.md
          
          # Add job status summary
          echo "## Job Status Summary" >> test-summary.md
          echo "- **Lint**: ${{ needs.lint.result }}" >> test-summary.md
          echo "- **Smoke Tests**: ${{ needs.smoke-tests.result }}" >> test-summary.md
          echo "- **Regression Tests**: ${{ needs.regression-tests.result }}" >> test-summary.md
          echo "- **Accessibility Tests**: ${{ needs.accessibility-tests.result }}" >> test-summary.md
          echo "- **Security Tests**: ${{ needs.security-tests.result }}" >> test-summary.md
          echo "- **Responsive Tests**: ${{ needs.responsive-tests.result }}" >> test-summary.md
          echo "" >> test-summary.md
          
          # Count artifacts to estimate test results
          SMOKE_ARTIFACTS=$(find artifacts -name "*smoke*" 2>/dev/null | wc -l)
          REGRESSION_ARTIFACTS=$(find artifacts -name "*regression*" 2>/dev/null | wc -l)
          ACCESSIBILITY_ARTIFACTS=$(find artifacts -name "*accessibility*" 2>/dev/null | wc -l)
          SECURITY_ARTIFACTS=$(find artifacts -name "*security*" 2>/dev/null | wc -l)
          RESPONSIVE_ARTIFACTS=$(find artifacts -name "*responsive*" 2>/dev/null | wc -l)
          
          echo "## Test Suite Results" >> test-summary.md
          echo "- Smoke Tests: $SMOKE_ARTIFACTS artifacts" >> test-summary.md
          echo "- Regression Tests: $REGRESSION_ARTIFACTS artifacts" >> test-summary.md
          echo "- Accessibility Tests: $ACCESSIBILITY_ARTIFACTS artifacts" >> test-summary.md
          echo "- Security Tests: $SECURITY_ARTIFACTS artifacts" >> test-summary.md
          echo "- Responsive Tests: $RESPONSIVE_ARTIFACTS artifacts" >> test-summary.md

      - name: Upload consolidated report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: consolidated-test-report
          path: |
            merged-reports
            test-summary.md
          retention-days: 30

      - name: Comment PR with test results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            if (fs.existsSync('test-summary.md')) {
              const summary = fs.readFileSync('test-summary.md', 'utf8');
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: summary
              });
            }
        continue-on-error: true

  # Deploy test results to GitHub Pages - with optional deployment
  deploy-results:
    name: Deploy Test Results
    runs-on: ubuntu-latest
    needs: generate-report
    if: always() && github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download consolidated report
        uses: actions/download-artifact@v4
        with:
          name: consolidated-test-report
          path: public
        continue-on-error: true

      - name: Check if GitHub Pages is enabled
        id: pages-check
        run: |
          # Try to get Pages info to see if it's enabled
          if curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
             -H "Accept: application/vnd.github.v3+json" \
             "https://api.github.com/repos/${{ github.repository }}/pages" | grep -q "html_url"; then
            echo "pages_enabled=true" >> $GITHUB_OUTPUT
            echo "✅ GitHub Pages is enabled"
          else
            echo "pages_enabled=false" >> $GITHUB_OUTPUT
            echo "⚠️ GitHub Pages is not enabled - skipping deployment"
            echo "💡 To enable: Repository Settings → Pages → Source: GitHub Actions"
          fi
        continue-on-error: true

      - name: Setup Pages
        if: steps.pages-check.outputs.pages_enabled == 'true'
        uses: actions/configure-pages@v4

      - name: Upload to Pages
        if: steps.pages-check.outputs.pages_enabled == 'true'
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

      - name: Deploy to Pages
        if: steps.pages-check.outputs.pages_enabled == 'true'
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Pages deployment summary
        run: |
          if [ "${{ steps.pages-check.outputs.pages_enabled }}" == "true" ]; then
            echo "✅ Reports deployed to GitHub Pages"
            echo "📄 URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
            echo "🔗 Direct link will be available in a few minutes"
          else
            echo "⚠️ GitHub Pages not enabled - reports available as artifacts only"
            echo "📦 Download 'consolidated-test-report' artifact to view reports"
            echo "💡 To enable Pages: Repository Settings → Pages → Source: GitHub Actions"
            echo "🔧 Or set ENABLE_PAGES_DEPLOYMENT=false to disable this job"
          fi

  # Summary job to provide overall workflow status
  workflow-summary:
    name: Workflow Summary
    runs-on: ubuntu-latest
    needs: [lint, smoke-tests, regression-tests, accessibility-tests, security-tests, responsive-tests, deploy-results]
    if: always()
    steps:
      - name: Generate workflow summary
        run: |
          echo "## 🎯 Workflow Execution Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Job Results:" >> $GITHUB_STEP_SUMMARY
          echo "- **Lint**: ${{ needs.lint.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Smoke Tests**: ${{ needs.smoke-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Regression Tests**: ${{ needs.regression-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Accessibility Tests**: ${{ needs.accessibility-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Security Tests**: ${{ needs.security-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Responsive Tests**: ${{ needs.responsive-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Deploy Results**: ${{ needs.deploy-results.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Determine overall status
          if [[ "${{ needs.lint.result }}" == "success" && 
                "${{ needs.smoke-tests.result }}" == "success" && 
                "${{ needs.regression-tests.result }}" == "success" && 
                "${{ needs.accessibility-tests.result }}" == "success" && 
                "${{ needs.security-tests.result }}" == "success" && 
                "${{ needs.responsive-tests.result }}" == "success" ]]; then
            echo "### ✅ Overall Status: SUCCESS" >> $GITHUB_STEP_SUMMARY
            echo "All test suites passed successfully!" >> $GITHUB_STEP_SUMMARY
          else
            echo "### ❌ Overall Status: SOME FAILURES" >> $GITHUB_STEP_SUMMARY
            echo "One or more test suites failed. Check individual job results above." >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Reports:" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ needs.deploy-results.result }}" == "success" ]]; then
            echo "- 🌐 **GitHub Pages**: Available at https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "- 📦 **Artifacts**: Download 'consolidated-test-report' from this workflow run" >> $GITHUB_STEP_SUMMARY
          fi

