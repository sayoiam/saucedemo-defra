name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

# Cancel previous runs for the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Lint and type checking
  lint-and-type-check:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # Updated to Node.js 20

      - name: Install dependencies with retry
        run: |
          for i in {1..3}; do
            echo "Attempt $i: Installing dependencies..."
            if npm install; then
              echo "‚úÖ Dependencies installed successfully"
              break
            else
              echo "‚ùå Attempt $i failed"
              if [ $i -eq 3 ]; then
                echo "üí• All attempts failed"
                exit 1
              fi
              echo "‚è≥ Waiting 30 seconds before retry..."
              sleep 30
            fi
          done

      - name: Run TypeScript compiler
        run: npx tsc --noEmit --skipLibCheck

      - name: Run ESLint (if configured)
        run: |
          if [ -f ".eslintrc.js" ] || [ -f ".eslintrc.json" ]; then
            npx eslint cypress/**/*.ts --format=github
          else
            echo "ESLint not configured, skipping"
          fi
        continue-on-error: true

  # Smoke tests
  smoke-tests:
    name: Smoke Tests
    runs-on: ubuntu-latest
    needs: lint-and-type-check
    strategy:
      matrix:
        browser: [chrome, firefox]
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # Updated to Node.js 20

      - name: Install dependencies with retry
        run: |
          for i in {1..3}; do
            echo "Attempt $i: Installing dependencies..."
            if npm install; then
              echo "‚úÖ Dependencies installed successfully"
              break
            else
              echo "‚ùå Attempt $i failed"
              if [ $i -eq 3 ]; then
                echo "üí• All attempts failed"
                exit 1
              fi
              echo "‚è≥ Waiting 30 seconds before retry..."
              sleep 30
            fi
          done

      - name: Run smoke tests
        uses: cypress-io/github-action@v6
        with:
          install: false
          browser: ${{ matrix.browser }}
          spec: |
            cypress/e2e/features/login.feature
            cypress/e2e/features/complete-purchase-flow.feature
            cypress/e2e/features/inventory-management.feature
            cypress/e2e/complete-purchase-flow.cy.ts

      - name: Upload smoke test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: smoke-test-artifacts-${{ matrix.browser }}
          path: |
            cypress/screenshots
            cypress/videos
            cypress/reports
          retention-days: 7

  # Regression tests
  regression-tests:
    name: Regression Tests
    runs-on: ubuntu-latest
    needs: lint-and-type-check
    strategy:
      matrix:
        browser: [chrome, firefox, edge]
        viewport: [desktop, tablet, mobile]
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # Updated to Node.js 20

      - name: Install dependencies with retry
        run: |
          for i in {1..3}; do
            echo "Attempt $i: Installing dependencies..."
            if npm install; then
              echo "‚úÖ Dependencies installed successfully"
              break
            else
              echo "‚ùå Attempt $i failed"
              if [ $i -eq 3 ]; then
                echo "üí• All attempts failed"
                exit 1
              fi
              echo "‚è≥ Waiting 30 seconds before retry..."
              sleep 30
            fi
          done

      - name: Run regression tests
        uses: cypress-io/github-action@v6
        with:
          install: false
          browser: ${{ matrix.browser }}
          spec: |
            cypress/e2e/features/login.feature
            cypress/e2e/features/complete-purchase-flow.feature
            cypress/e2e/features/inventory-management.feature
            cypress/e2e/features/security.feature
            cypress/e2e/complete-purchase-flow.cy.ts
          config: |
            {
              "viewportWidth": ${{ matrix.viewport == 'mobile' && 375 || matrix.viewport == 'tablet' && 768 || 1280 }},
              "viewportHeight": ${{ matrix.viewport == 'mobile' && 667 || matrix.viewport == 'tablet' && 1024 || 720 }}
            }

      - name: Upload regression test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: regression-test-artifacts-${{ matrix.browser }}-${{ matrix.viewport }}
          path: |
            cypress/screenshots
            cypress/videos
            cypress/reports
          retention-days: 7

  # Accessibility tests - dedicated job
  accessibility-tests:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    needs: lint-and-type-check
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # Updated to Node.js 20

      - name: Install dependencies with retry
        run: |
          for i in {1..3}; do
            echo "Attempt $i: Installing dependencies..."
            if npm install; then
              echo "‚úÖ Dependencies installed successfully"
              break
            else
              echo "‚ùå Attempt $i failed"
              if [ $i -eq 3 ]; then
                echo "üí• All attempts failed"
                exit 1
              fi
              echo "‚è≥ Waiting 30 seconds before retry..."
              sleep 30
            fi
          done

      - name: Run accessibility tests
        uses: cypress-io/github-action@v6
        with:
          install: false
          browser: chrome
          spec: cypress/e2e/features/accessibility.feature

      - name: Upload accessibility artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: accessibility-test-artifacts
          path: |
            cypress/screenshots
            cypress/videos
            cypress/reports
          retention-days: 14

  # Security tests - dedicated job
  security-tests:
    name: Security Tests
    runs-on: ubuntu-latest
    needs: lint-and-type-check
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # Updated to Node.js 20

      - name: Install dependencies with retry
        run: |
          for i in {1..3}; do
            echo "Attempt $i: Installing dependencies..."
            if npm install; then
              echo "‚úÖ Dependencies installed successfully"
              break
            else
              echo "‚ùå Attempt $i failed"
              if [ $i -eq 3 ]; then
                echo "üí• All attempts failed"
                exit 1
              fi
              echo "‚è≥ Waiting 30 seconds before retry..."
              sleep 30
            fi
          done

      - name: Run security tests
        uses: cypress-io/github-action@v6
        with:
          install: false
          browser: chrome
          spec: cypress/e2e/features/security.feature

      - name: Upload security artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-test-artifacts
          path: |
            cypress/screenshots
            cypress/videos
            cypress/reports
          retention-days: 14

  # Responsive tests - dedicated job with proper Node.js 20
  responsive-tests:
    name: Responsive Tests
    runs-on: ubuntu-latest
    needs: lint-and-type-check
    strategy:
      matrix:
        viewport: [mobile, tablet, desktop, large-desktop]
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # Updated to Node.js 20 - THIS FIXES THE ISSUE

      - name: Install dependencies with retry
        run: |
          for i in {1..3}; do
            echo "Attempt $i: Installing dependencies..."
            if npm install; then
              echo "‚úÖ Dependencies installed successfully"
              break
            else
              echo "‚ùå Attempt $i failed"
              if [ $i -eq 3 ]; then
                echo "üí• All attempts failed"
                exit 1
              fi
              echo "‚è≥ Waiting 30 seconds before retry..."
              sleep 30
            fi
          done

      - name: Run responsive tests
        uses: cypress-io/github-action@v6
        with:
          install: false
          browser: chrome
          spec: |
            cypress/e2e/features/login.feature
            cypress/e2e/features/complete-purchase-flow.feature
            cypress/e2e/features/inventory-management.feature
            cypress/e2e/features/security.feature
          config: |
            {
              "viewportWidth": ${{ matrix.viewport == 'mobile' && 375 || matrix.viewport == 'tablet' && 768 || matrix.viewport == 'desktop' && 1280 || 1920 }},
              "viewportHeight": ${{ matrix.viewport == 'mobile' && 667 || matrix.viewport == 'tablet' && 1024 || matrix.viewport == 'desktop' && 720 || 1080 }}
            }

      - name: Upload responsive test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: responsive-test-artifacts-${{ matrix.viewport }}
          path: |
            cypress/screenshots
            cypress/videos
            cypress/reports
          retention-days: 7

  # Generate consolidated test report
  generate-test-report:
    name: Generate Test Report
    runs-on: ubuntu-latest
    needs: [smoke-tests, regression-tests, accessibility-tests, security-tests, responsive-tests]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # Updated to Node.js 20

      - name: Install dependencies with retry
        run: |
          for i in {1..3}; do
            echo "Attempt $i: Installing dependencies..."
            if npm install; then
              echo "‚úÖ Dependencies installed successfully"
              break
            else
              echo "‚ùå Attempt $i failed"
              if [ $i -eq 3 ]; then
                echo "üí• All attempts failed"
                exit 1
              fi
              echo "‚è≥ Waiting 30 seconds before retry..."
              sleep 30
            fi
          done

      - name: Download all test artifacts
        uses: actions/download-artifact@v4
        with:
          path: test-artifacts
        continue-on-error: true

      - name: Generate consolidated report
        run: |
          mkdir -p consolidated-reports
          
          # Create test summary
          echo "# Test Execution Report - $(date)" > consolidated-reports/test-summary.md
          echo "" >> consolidated-reports/test-summary.md
          echo "**Execution Date:** $(date)" >> consolidated-reports/test-summary.md
          echo "**Commit:** ${{ github.sha }}" >> consolidated-reports/test-summary.md
          echo "**Branch:** ${{ github.ref_name }}" >> consolidated-reports/test-summary.md
          echo "**Node.js Version:** 20" >> consolidated-reports/test-summary.md
          echo "" >> consolidated-reports/test-summary.md
          
          # Add job status summary
          echo "## Job Status Summary" >> consolidated-reports/test-summary.md
          echo "- **Lint and Type Check**: ${{ needs.lint-and-type-check.result }}" >> consolidated-reports/test-summary.md
          echo "- **Smoke Tests**: ${{ needs.smoke-tests.result }}" >> consolidated-reports/test-summary.md
          echo "- **Regression Tests**: ${{ needs.regression-tests.result }}" >> consolidated-reports/test-summary.md
          echo "- **Accessibility Tests**: ${{ needs.accessibility-tests.result }}" >> consolidated-reports/test-summary.md
          echo "- **Security Tests**: ${{ needs.security-tests.result }}" >> consolidated-reports/test-summary.md
          echo "- **Responsive Tests**: ${{ needs.responsive-tests.result }}" >> consolidated-reports/test-summary.md
          echo "" >> consolidated-reports/test-summary.md
          
          # Count artifacts
          SMOKE_ARTIFACTS=$(find test-artifacts -name "*smoke*" 2>/dev/null | wc -l)
          REGRESSION_ARTIFACTS=$(find test-artifacts -name "*regression*" 2>/dev/null | wc -l)
          ACCESSIBILITY_ARTIFACTS=$(find test-artifacts -name "*accessibility*" 2>/dev/null | wc -l)
          SECURITY_ARTIFACTS=$(find test-artifacts -name "*security*" 2>/dev/null | wc -l)
          RESPONSIVE_ARTIFACTS=$(find test-artifacts -name "*responsive*" 2>/dev/null | wc -l)
          
          echo "## Test Execution Summary" >> consolidated-reports/test-summary.md
          echo "- Smoke Tests: $SMOKE_ARTIFACTS artifacts" >> consolidated-reports/test-summary.md
          echo "- Regression Tests: $REGRESSION_ARTIFACTS artifacts" >> consolidated-reports/test-summary.md
          echo "- Accessibility Tests: $ACCESSIBILITY_ARTIFACTS artifacts" >> consolidated-reports/test-summary.md
          echo "- Security Tests: $SECURITY_ARTIFACTS artifacts" >> consolidated-reports/test-summary.md
          echo "- Responsive Tests: $RESPONSIVE_ARTIFACTS artifacts" >> consolidated-reports/test-summary.md
          echo "" >> consolidated-reports/test-summary.md
          
          # Merge Mochawesome reports if they exist
          if command -v npx >/dev/null 2>&1; then
            echo "üîç Looking for Mochawesome reports to merge..."
            find test-artifacts -name "*.json" -path "*/reports/*" | head -10 | while read report; do
              echo "Found report: $report"
            done
          
            # Try to merge reports
            if find test-artifacts -name "*.json" -path "*/reports/*" | head -1 | grep -q .; then
              echo "üìä Merging Mochawesome reports..."
              mkdir -p consolidated-reports/mochawesome
              npx mochawesome-merge "test-artifacts/**/reports/*.json" > consolidated-reports/mochawesome/merged-report.json || echo "‚ö†Ô∏è Report merge failed"
          
              if [ -f "consolidated-reports/mochawesome/merged-report.json" ]; then
                npx marge consolidated-reports/mochawesome/merged-report.json --reportDir consolidated-reports/mochawesome --inline || echo "‚ö†Ô∏è HTML generation failed"
              fi
            else
              echo "‚ö†Ô∏è No Mochawesome JSON reports found to merge"
            fi
          fi
        continue-on-error: true

      - name: Upload consolidated report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: consolidated-test-report
          path: consolidated-reports
          retention-days: 30

  # Workflow summary
  workflow-summary:
    name: Workflow Summary
    runs-on: ubuntu-latest
    needs: [generate-test-report]
    if: always()
    steps:
      - name: Generate workflow summary
        run: |
          echo "# Workflow Execution Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Date:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Node.js Version:** 20 (Fixed compatibility issues)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Job Results" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Lint and Type Check | ${{ needs.lint-and-type-check.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Smoke Tests | ${{ needs.smoke-tests.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Regression Tests | ${{ needs.regression-tests.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Accessibility Tests | ${{ needs.accessibility-tests.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Security Tests | ${{ needs.security-tests.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Responsive Tests | ${{ needs.responsive-tests.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Generate Test Report | ${{ needs.generate-test-report.result }} |" >> $GITHUB_STEP_SUMMARY

  # Deploy test results to GitHub Pages (optional)
  deploy-results:
    name: Deploy Test Results
    runs-on: ubuntu-latest
    needs: generate-test-report
    if: always() && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download consolidated report
        uses: actions/download-artifact@v4
        with:
          name: consolidated-test-report
          path: public

      - name: Check if GitHub Pages is enabled
        id: pages-check
        run: |
          if curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
             -H "Accept: application/vnd.github.v3+json" \
             "https://api.github.com/repos/${{ github.repository }}/pages" | grep -q "html_url"; then
            echo "pages_enabled=true" >> $GITHUB_OUTPUT
            echo "‚úÖ GitHub Pages is enabled"
          else
            echo "pages_enabled=false" >> $GITHUB_OUTPUT
            echo "‚ö†Ô∏è GitHub Pages is not enabled - skipping deployment"
            echo "To enable: Go to Settings ‚Üí Pages ‚Üí Source: GitHub Actions"
          fi
        continue-on-error: true

      - name: Setup Pages
        if: steps.pages-check.outputs.pages_enabled == 'true'
        uses: actions/configure-pages@v4

      - name: Upload to Pages
        if: steps.pages-check.outputs.pages_enabled == 'true'
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

      - name: Deploy to Pages
        if: steps.pages-check.outputs.pages_enabled == 'true'
        id: deployment
        uses: actions/deploy-pages@v4

